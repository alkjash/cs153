main(){
let x=2; {
    let i=2; {
        while (i<10)
            i=i+1;
    }
    return x;
}
}
/* Expected Output:
CFG: 
main:
x0 := $30
x1 := $31
x2 := $16
x3 := $17
x4 := $18
x5 := $19
x6 := $20
x7 := $21
x8 := $22
x9 := $23
x10 := 2
x11 := 1
x12 := 1
if x11=1 goto .L3 else goto .L2
.L3:
x13 := x10+1
x12 := x13
jump .L1
.L2:
x14 := x10+2
x12 := x14
jump .L1
.L1:
$2 := x12
jump .L0
.L4:
jump .L0
.L0:
$30 := x0
$31 := x1
$16 := x2
$17 := x3
$18 := x4
$19 := x5
$20 := x6
$21 := x7
$22 := x8
$23 := x9
return

Live IN : 
.L0 -> x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, $2, 
.L1 -> x0, x1, x12, x2, x3, x4, x5, x6, x7, x8, x9, 
.L2 -> x0, x1, x10, x2, x3, x4, x5, x6, x7, x8, x9, 
.L3 -> x0, x1, x10, x2, x3, x4, x5, x6, x7, x8, x9, 
.L4 -> x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, $2, 
main -> $16, $17, $18, $19, $20, $21, $22, $23, $30, $31, 

Live OUT : 
.L0 -> 
.L1 -> x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, $2, 
.L2 -> x0, x1, x12, x2, x3, x4, x5, x6, x7, x8, x9, 
.L3 -> x0, x1, x12, x2, x3, x4, x5, x6, x7, x8, x9, 
.L4 -> x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, $2, 
main -> x0, x1, x10, x2, x3, x4, x5, x6, x7, x8, x9, 

Interference Graph:
x0 -> $2, x14, x13, x9, x8, x7, x6, x5, x4, x3, x2, x12, x11, x10, x1, $31, $23, $22, $21, $20, $19, $18, $17, $16, 
x1 -> $30, $2, x14, x13, x9, x8, x7, x6, x5, x4, x3, x2, x12, x11, x10, $23, $22, $21, $20, $19, $18, $17, $16, x0, 
x10 -> x12, x11, x9, x8, x7, x6, x5, x4, x3, x2, x1, x0, 
x11 -> x12, x9, x8, x7, x6, x5, x4, x3, x2, x10, x1, x0, 
x12 -> x9, x8, x7, x6, x5, x4, x3, x2, x11, x10, x1, x0, 
x13 -> x9, x8, x7, x6, x5, x4, x3, x2, x1, x0, 
x14 -> x9, x8, x7, x6, x5, x4, x3, x2, x1, x0, 
x2 -> $31, $30, $2, x14, x13, x9, x8, x7, x6, x5, x4, x3, $23, $22, $21, $20, $19, $18, $17, x1, x0, x12, x11, x10, 
x3 -> $31, $30, $16, $2, x14, x13, x9, x8, x7, x6, x5, x4, $23, $22, $21, $20, $19, $18, x2, x1, x0, x12, x11, x10, 
x4 -> $31, $30, $17, $16, $2, x14, x13, x9, x8, x7, x6, x5, $23, $22, $21, $20, $19, x3, x2, x1, x0, x12, x11, x10, 
x5 -> $31, $30, $18, $17, $16, $2, x14, x13, x9, x8, x7, x6, $23, $22, $21, $20, x4, x3, x2, x1, x0, x12, x11, x10, 
x6 -> $31, $30, $19, $18, $17, $16, $2, x14, x13, x9, x8, x7, $23, $22, $21, x5, x4, x3, x2, x1, x0, x12, x11, x10, 
x7 -> $31, $30, $20, $19, $18, $17, $16, $2, x14, x13, x9, x8, $23, $22, x6, x5, x4, x3, x2, x1, x0, x12, x11, x10, 
x8 -> $31, $30, $21, $20, $19, $18, $17, $16, $2, x14, x13, x9, $23, x7, x6, x5, x4, x3, x2, x1, x0, x12, x11, x10, 
x9 -> $31, $30, $22, $21, $20, $19, $18, $17, $16, $2, x14, x13, x8, x7, x6, x5, x4, x3, x2, x1, x0, x12, x11, x10, 
$2 -> $31, $30, $23, $22, $21, $20, $19, $18, $17, $16, x9, x8, x7, x6, x5, x4, x3, x2, x1, x0, 
$16 -> $2, x9, x8, x7, x6, x5, x4, x3, x1, x0, 
$17 -> $2, x9, x8, x7, x6, x5, x4, x2, x1, x0, 
$18 -> $2, x9, x8, x7, x6, x5, x3, x2, x1, x0, 
$19 -> $2, x9, x8, x7, x6, x4, x3, x2, x1, x0, 
$20 -> $2, x9, x8, x7, x5, x4, x3, x2, x1, x0, 
$21 -> $2, x9, x8, x6, x5, x4, x3, x2, x1, x0, 
$22 -> $2, x9, x7, x6, x5, x4, x3, x2, x1, x0, 
$23 -> $2, x8, x7, x6, x5, x4, x3, x2, x1, x0, 
$30 -> $2, x9, x8, x7, x6, x5, x4, x3, x2, x1, 
$31 -> $2, x9, x8, x7, x6, x5, x4, x3, x2, x0, 
*/

