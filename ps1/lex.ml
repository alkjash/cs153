# 7 "lex.mll"
 
open Parse
open Lexing

let incr_lineno lexbuf =
  let pos = lexbuf.lex_curr_p in
  lexbuf.lex_curr_p <- { pos with
    pos_lnum = pos.pos_lnum + 1;
    pos_bol = pos.pos_cnum;
  }

# 14 "lex.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\226\255\227\255\228\255\002\000\000\000\000\000\000\000\
    \004\000\002\000\001\000\002\000\003\000\004\000\243\255\244\255\
    \245\255\005\000\248\255\249\255\250\255\002\000\019\000\029\000\
    \002\000\255\255\005\000\000\000\039\000\251\255\241\255\240\255\
    \238\255\236\255\235\255\234\255\233\255\000\000\006\000\232\255\
    \004\000\002\000\011\000\231\255\004\000\230\255\004\000\004\000\
    \008\000\003\000\229\255\004\000\253\255\254\255\011\000\255\255\
    ";
  Lexing.lex_backtrk = 
   "\001\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\018\000\016\000\013\000\255\255\255\255\
    \255\255\009\000\255\255\255\255\255\255\008\000\003\000\002\000\
    \001\000\255\255\000\000\003\000\003\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\002\000\255\255\
    ";
  Lexing.lex_default = 
   "\255\255\000\000\000\000\000\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\000\000\
    \000\000\255\255\000\000\000\000\000\000\255\255\255\255\255\255\
    \255\255\000\000\255\255\255\255\255\255\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\255\255\255\255\000\000\
    \255\255\255\255\255\255\000\000\255\255\000\000\255\255\255\255\
    \255\255\255\255\000\000\052\000\000\000\000\000\255\255\000\000\
    ";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\024\000\025\000\024\000\024\000\026\000\024\000\025\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \024\000\013\000\024\000\000\000\000\000\000\000\010\000\034\000\
    \015\000\014\000\018\000\020\000\029\000\019\000\054\000\021\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\055\000\016\000\012\000\017\000\011\000\033\000\
    \032\000\031\000\030\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\022\000\022\000\000\000\000\000\007\000\005\000\046\000\
    \040\000\008\000\036\000\039\000\037\000\041\000\042\000\044\000\
    \043\000\050\000\004\000\038\000\022\000\022\000\045\000\006\000\
    \047\000\048\000\049\000\003\000\009\000\002\000\035\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\027\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\027\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \027\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \001\000\000\000\000\000\000\000\053\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    ";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\024\000\000\000\000\000\024\000\026\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\024\000\255\255\255\255\255\255\000\000\010\000\
    \000\000\000\000\000\000\000\000\021\000\000\000\051\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\054\000\000\000\000\000\000\000\000\000\011\000\
    \012\000\013\000\017\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\000\000\000\000\255\255\255\255\000\000\000\000\004\000\
    \006\000\000\000\008\000\038\000\007\000\040\000\041\000\005\000\
    \042\000\049\000\000\000\037\000\022\000\022\000\044\000\000\000\
    \046\000\047\000\048\000\000\000\000\000\000\000\009\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\027\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\022\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \028\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\051\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    ";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec lexer lexbuf =
    __ocaml_lex_lexer_rec lexbuf 0
and __ocaml_lex_lexer_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 31 "lex.mll"
      ( incr_lineno lexbuf; lexer lexbuf )
# 142 "lex.ml"

  | 1 ->
# 32 "lex.mll"
      ( lexer lexbuf )
# 147 "lex.ml"

  | 2 ->
# 33 "lex.mll"
         ( INT(int_of_string(Lexing.lexeme lexbuf)) )
# 152 "lex.ml"

  | 3 ->
let
# 34 "lex.mll"
                text
# 158 "lex.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 34 "lex.mll"
                            ( VAR (text) )
# 162 "lex.ml"

  | 4 ->
# 35 "lex.mll"
                            ( comment lexbuf )
# 167 "lex.ml"

  | 5 ->
# 36 "lex.mll"
                       ( PLUS )
# 172 "lex.ml"

  | 6 ->
# 37 "lex.mll"
                       ( MINUS )
# 177 "lex.ml"

  | 7 ->
# 38 "lex.mll"
                       ( STAR )
# 182 "lex.ml"

  | 8 ->
# 39 "lex.mll"
                       ( SLASH )
# 187 "lex.ml"

  | 9 ->
# 40 "lex.mll"
                            ( ASSIGN )
# 192 "lex.ml"

  | 10 ->
# 41 "lex.mll"
                            ( SEMI )
# 197 "lex.ml"

  | 11 ->
# 42 "lex.mll"
                            ( LPAREN )
# 202 "lex.ml"

  | 12 ->
# 43 "lex.mll"
                            ( RPAREN )
# 207 "lex.ml"

  | 13 ->
# 44 "lex.mll"
            ( NOT )
# 212 "lex.ml"

  | 14 ->
# 45 "lex.mll"
            ( EQ )
# 217 "lex.ml"

  | 15 ->
# 46 "lex.mll"
            ( NEQ )
# 222 "lex.ml"

  | 16 ->
# 47 "lex.mll"
           ( LT )
# 227 "lex.ml"

  | 17 ->
# 48 "lex.mll"
            ( LTE )
# 232 "lex.ml"

  | 18 ->
# 49 "lex.mll"
           ( GT )
# 237 "lex.ml"

  | 19 ->
# 50 "lex.mll"
            ( GTE )
# 242 "lex.ml"

  | 20 ->
# 51 "lex.mll"
            ( AND )
# 247 "lex.ml"

  | 21 ->
# 52 "lex.mll"
            ( OR )
# 252 "lex.ml"

  | 22 ->
# 53 "lex.mll"
            ( IF )
# 257 "lex.ml"

  | 23 ->
# 54 "lex.mll"
             ( ELSE )
# 262 "lex.ml"

  | 24 ->
# 55 "lex.mll"
              ( WHILE )
# 267 "lex.ml"

  | 25 ->
# 56 "lex.mll"
             ( FOR )
# 272 "lex.ml"

  | 26 ->
# 57 "lex.mll"
               ( RETURN )
# 277 "lex.ml"

  | 27 ->
# 58 "lex.mll"
           ( LBRACE )
# 282 "lex.ml"

  | 28 ->
# 59 "lex.mll"
           ( RBRACE )
# 287 "lex.ml"

  | 29 ->
# 60 "lex.mll"
                       ( EOF )
# 292 "lex.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_lexer_rec lexbuf __ocaml_lex_state

and comment lexbuf =
    __ocaml_lex_comment_rec lexbuf 51
and __ocaml_lex_comment_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 63 "lex.mll"
                                ( lexer lexbuf )
# 303 "lex.ml"

  | 1 ->
# 64 "lex.mll"
                                ( raise (Failure "missing comment terminator") )
# 308 "lex.ml"

  | 2 ->
# 65 "lex.mll"
                                ( comment lexbuf )
# 313 "lex.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_comment_rec lexbuf __ocaml_lex_state

;;

